<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="netflix.db" readonly="0" foreign_keys="0" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1494"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="netflix_titles" custom_title="0" dock_id="2" table="4,14:mainnetflix_titles"/><dock_state state="000000ff00000000fd00000001000000020000077200000389fc0100000001fc00000000000007720000011700fffffffa000000010100000005fb000000160064006f0063006b00420072006f00770073006500310000000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500320100000000ffffffff0000011700fffffffb000000160064006f0063006b00420072006f00770073006500330000000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500340000000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500350000000000ffffffff0000000000000000000002980000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="netflix_titles" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="63"/><column index="2" value="59"/><column index="3" value="300"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="300"/><column index="7" value="124"/><column index="8" value="92"/><column index="9" value="51"/><column index="10" value="73"/><column index="11" value="300"/><column index="12" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">-- 游녤 Cuenta cu치ntos registros (filas) hay en la tabla netflix_titles.
-- Es lo primero que se suele hacer para ver el tama침o de la base de datos.
SELECT 
    COUNT(*) as total_registros    -- COUNT(*) cuenta todas las filas de la tabla; AS total_registros le pone un nombre al resultado
FROM 
    netflix_titles;                -- FROM indica la tabla sobre la que se ejecuta el conteo
</sql><sql name="SQL 2*">-- 游녤 Agrupa el contenido por tipo (Movie o TV Show) y cuenta cu치ntos hay de cada uno.
-- Sirve para ver la proporci칩n de pel칤culas vs series.
SELECT 
    type,                          -- Selecciona la columna 'type' (por ejemplo 'Movie' o 'TV Show')
    COUNT(*) as cantidad           -- Cuenta las filas de cada grupo (por tipo) y le pone el alias 'cantidad'
FROM 
    netflix_titles                 -- Tabla origen de los datos
GROUP BY 
    type;                          -- GROUP BY agrupa las filas por el valor de 'type' para calcular COUNT por cada grupo
</sql><sql name="SQL 3*">-- 游녤 Agrupa por a침o de lanzamiento (release_year), cuenta cu치ntos t칤tulos se lanzaron ese a침o,
-- los ordena de mayor a menor y muestra los 10 a침os con m치s producciones.
SELECT 
    release_year,                  -- Selecciona la columna 'release_year' (a침o de lanzamiento)
    COUNT(*) as cantidad           -- Cuenta la cantidad de t칤tulos por cada a침o
FROM 
    netflix_titles                 -- Tabla origen
WHERE 
    release_year IS NOT NULL       -- Excluye filas sin a침o (NULL) para evitar conteos err치ticos
GROUP BY 
    release_year                   -- Agrupa por a침o para obtener un conteo por cada a침o
ORDER BY 
    cantidad DESC                  -- Ordena los a침os por la cantidad de t칤tulos, de mayor a menor
LIMIT 
    10;                            -- Limita la salida a los 10 primeros resultados (top 10 a침os)
</sql><sql name="SQL 4*">-- 游녤 An치lisis de contenido por d칠cada y tipo, calculando adem치s % de contenido adulto.
WITH contenido_por_decada AS (         -- Define el primer CTE llamado 'contenido_por_decada'
    SELECT 
        CASE 
            WHEN release_year &gt;= 2020 THEN '2020s'    -- Si el a침o &gt;= 2020, etiqueta '2020s'
            WHEN release_year &gt;= 2010 THEN '2010s'    -- Si el a침o est치 entre 2010 y 2019, etiqueta '2010s'
            WHEN release_year &gt;= 2000 THEN '2000s'    -- Si el a침o est치 entre 2000 y 2009, etiqueta '2000s'
            WHEN release_year &gt;= 1990 THEN '1990s'    -- Si el a침o est치 entre 1990 y 1999, etiqueta '1990s'
            ELSE 'VIEJA'                             -- Si es anterior o no encaja, etiqueta 'VIEJA'
        END as decada,                               -- Alias de la columna calculada: 'decada'
        type,                                        -- Incluye la columna 'type' (Movie/TV Show)
        COUNT(*) as cantidad,                        -- Cuenta t칤tulos por combinaci칩n (decada, type)
        AVG(                                         -- AVG de una expresi칩n 1/0 devuelve la proporci칩n de 1s
            CASE WHEN rating IN ('TV-MA', 'R') THEN 1 ELSE 0 END
        ) * 100 as porcentaje_adulto                -- Multiplica por 100 para obtener porcentaje de contenido adulto
    FROM 
        netflix_titles                              -- Fuente de los datos
    WHERE 
        release_year IS NOT NULL                    -- Excluye registros sin a침o
    GROUP BY 
        decada, type                                -- Agrupa por d칠cada y tipo para calcular COUNT y AVG por categor칤a
), 
estadisticas_generales AS (                      -- Define el segundo CTE con estad칤sticas agregadas
    SELECT 
        AVG(cantidad) as promedio_por_categoria    -- Calcula el promedio de 'cantidad' entre todas las filas de contenido_por_decada
    FROM 
        contenido_por_decada                       -- Usa el CTE anterior como fuente
)
SELECT 
    cpd.decada,                                   -- Selecciona la d칠cada del CTE principal (alias cpd)
    cpd.type,                                     -- Selecciona el tipo (Movie/TV Show)
    cpd.cantidad,                                 -- N칰mero de t칤tulos en esa combinaci칩n decada+type
    ROUND(cpd.porcentaje_adulto, 1) as porcentaje_contenido_adulto,  -- Redondea el porcentaje a 1 decimal
    CASE 
        WHEN cpd.cantidad &gt; eg.promedio_por_categoria THEN 'Por encima del promedio'  -- Compara con el promedio general
        ELSE 'Por debajo del promedio'
    END as clasificacion                          -- Devuelve una etiqueta que clasifica la categor칤a respecto al promedio
FROM 
    contenido_por_decada cpd                      -- Fuente principal: filas por d칠cada+tipo
CROSS JOIN 
    estadisticas_generales eg                     -- CROSS JOIN replica la 칰nica fila de estad칤sticas generales para comparar en cada fila
ORDER BY 
    cpd.decada DESC,                              -- Ordena por d칠cada descendente (m치s recientes primero)
    cpd.cantidad DESC;                            -- Dentro de cada d칠cada ordena por cantidad descendente
</sql><sql name="SQL 5*">-- 游녤 Ranking anual de pa칤ses productores (solo pa칤ses 칰nicos, desde 2015),
-- mostrando producci칩n del a침o, ranking dentro del a침o, producci칩n a침o anterior y crecimiento.
SELECT 
    country,                                      -- Pa칤s productor (columna 'country')
    release_year,                                 -- A침o de lanzamiento
    COUNT(*) as producciones_a침o,                  -- Conteo de producciones de ese pa칤s en ese a침o
    RANK() OVER (PARTITION BY release_year         -- RANK calcula el puesto dentro de cada partici칩n (aqu칤, cada a침o)
        ORDER BY COUNT(*) DESC                     -- Ordena por la cantidad de producciones (descendente) para asignar el ranking
    ) as ranking_anual,                            -- Alias: ranking anual del pa칤s para ese a침o
    LAG(COUNT(*)) OVER (PARTITION BY country       -- LAG trae el valor del grupo previo seg칰n el ORDER BY dentro de la partici칩n
        ORDER BY release_year                      -- Para cada country, LAG mira el a침o anterior (orden temporal)
    ) as producciones_a침o_anterior,                -- Alias: producciones del mismo pa칤s en el a침o anterior
    COUNT(*) - LAG(COUNT(*)) OVER (PARTITION BY country
        ORDER BY release_year
    ) as crecimiento                               -- Diferencia entre producciones del a침o y del a침o anterior
FROM 
    netflix_titles                                 -- Fuente de datos
WHERE 
    country IS NOT NULL                            -- Excluye filas sin pa칤s
    AND country NOT LIKE '%,%'                     -- Excluye registros con comas (evita coproducciones listadas como &quot;X, Y&quot;)
    AND release_year &gt;= 2015                       -- Considera solo a침os desde 2015 en adelante
GROUP BY 
    country, release_year                          -- Agrupa por pa칤s y a침o para obtener los conteos por combinaci칩n
HAVING 
    COUNT(*) &gt;= 3                                  -- Filtra: solo mantiene grupos con al menos 3 producciones por a침o
ORDER BY 
    release_year DESC,                             -- Ordena por a침o (m치s reciente primero)
    ranking_anual;                                 -- Dentro de cada a침o ordena por el ranking anual calculado
</sql><sql name="SQL 6*">-- 游녤 Simulaci칩n de un ROLLUP (detalle + subtotales + totales) usando UNION ALL y luego ordenando.
WITH resumen AS (                                  -- CTE que agrupa todos los bloques del UNION para ordenarlos despu칠s
    -- Bloque 1: detalle por tipo, rating y periodo
    SELECT 
        type as tipo_contenido,                    -- Columna 'type' renombrada a 'tipo_contenido' para el reporte
        rating as clasificacion,                   -- Columna 'rating' renombrada a 'clasificacion'
        CASE 
            WHEN release_year &gt;= 2020 THEN '2020+' -- Define el periodo seg칰n el a침o
            WHEN release_year &gt;= 2010 THEN '2010-2019'
            ELSE 'Antes 2010'
        END as periodo,                            -- Alias 'periodo' con el rango temporal
        COUNT(*) as cantidad_titulos,              -- Conteo de t칤tulos para esta combinaci칩n (tipo, rating, periodo)
        ROUND(                                     
            COUNT(*) * 100.0 / (                  -- Calcula porcentaje sobre el total filtrado por release_year IS NOT NULL y rating IS NOT NULL
                SELECT COUNT(*) 
                FROM netflix_titles 
                WHERE release_year IS NOT NULL 
                  AND rating IS NOT NULL
            ), 2
        ) as porcentaje_total                      -- Porcentaje redondeado con 2 decimales
    FROM 
        netflix_titles
    WHERE 
        release_year IS NOT NULL 
        AND rating IS NOT NULL                     -- Excluye filas sin a침o o sin rating para consistencia del denominador
    GROUP BY 
        type, rating,                              -- Agrupa por tipo y rating
        CASE 
            WHEN release_year &gt;= 2020 THEN '2020+'
            WHEN release_year &gt;= 2010 THEN '2010-2019'
            ELSE 'Antes 2010'
        END

    UNION ALL

    -- Bloque 2: subtotales por tipo y rating (sin dividir por periodo)
    SELECT 
        type as tipo_contenido,                    -- Mismo alias para mantener columnas consistentes en el UNION
        rating as clasificacion,                   
        'TOTAL' as periodo,                         -- 'TOTAL' indica que este registro es un subtotal sobre periodos
        COUNT(*) as cantidad_titulos,              
        ROUND(
            COUNT(*) * 100.0 / (
                SELECT COUNT(*) 
                FROM netflix_titles 
                WHERE release_year IS NOT NULL 
                  AND rating IS NOT NULL
            ), 2
        ) as porcentaje_total
    FROM 
        netflix_titles
    WHERE 
        release_year IS NOT NULL 
        AND rating IS NOT NULL
    GROUP BY 
        type, rating                               -- Agrupa solo por tipo y rating para obtener subtotales

    UNION ALL

    -- Bloque 3: subtotales por tipo solamente (sin clasificacion ni periodo)
    SELECT 
        type as tipo_contenido,
        'TOTAL' as clasificacion,                   -- 'TOTAL' en clasificacion para indicar subtotal por tipo
        'TOTAL' as periodo,                         -- 'TOTAL' en periodo
        COUNT(*) as cantidad_titulos,
        ROUND(
            COUNT(*) * 100.0 / (
                SELECT COUNT(*) 
                FROM netflix_titles 
                WHERE release_year IS NOT NULL 
                  AND rating IS NOT NULL
            ), 2
        ) as porcentaje_total
    FROM 
        netflix_titles
    WHERE 
        release_year IS NOT NULL 
        AND rating IS NOT NULL
    GROUP BY 
        type                                        -- Agrupa por tipo para obtener subtotales por tipo

    UNION ALL

    -- Bloque 4: total general
    SELECT 
        'TOTAL' as tipo_contenido,                  -- Marca que es el total general
        'TOTAL' as clasificacion,                   
        'TOTAL' as periodo,                         
        COUNT(*) as cantidad_titulos,               -- Conteo total de todos los registros (filtrados)
        100.0 as porcentaje_total                   -- El porcentaje del total sobre s칤 mismo es 100%
    FROM 
        netflix_titles
    WHERE 
        release_year IS NOT NULL 
        AND rating IS NOT NULL
)
SELECT 
    *                                             -- Selecciona todas las columnas del CTE 'resumen'
FROM 
    resumen
ORDER BY 
    CASE WHEN tipo_contenido = 'TOTAL' THEN 2 ELSE 1 END,  -- Empuja las filas marcadas 'TOTAL' al final del grupo de tipo
    tipo_contenido,                                      -- Ordena por tipo de contenido (alfab칠ticamente)
    CASE WHEN clasificacion = 'TOTAL' THEN 2 ELSE 1 END,  -- Empuja subtotales de clasificaci칩n al final dentro de cada tipo
    clasificacion,                                       -- Orden por clasificaci칩n (rating)
    CASE WHEN periodo = 'TOTAL' THEN 2 ELSE 1 END,       -- Empuja registros de periodo 'TOTAL' al final dentro de cada subgrupo
    periodo;                                             -- Orden final por periodo
</sql><current_tab id="5"/></tab_sql></sqlb_project>
